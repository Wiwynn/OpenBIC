From 577e1bf77367b5ec41b89f0a15a6cb032de3321f Mon Sep 17 00:00:00 2001
From: Chia-Wei Wang <chiawei_wang@aspeedtech.com>
Date: Fri, 29 Jul 2022 13:04:13 +0800
Subject: [PATCH] drivers: misc/aspeed-snoop: Replace RX handling with callback
 function

Replace the original snoop data read with RX callback function.

Signed-off-by: Chia-Wei Wang <chiawei_wang@aspeedtech.com>
Change-Id: Ibacf018d4b2ff8235c0ae2c0c7a3d4b6cef5625f
---
 drivers/misc/aspeed/snoop_aspeed.c         | 54 ++++++++--------------
 include/drivers/misc/aspeed/snoop_aspeed.h |  9 +++-
 2 files changed, 27 insertions(+), 36 deletions(-)

diff --git a/drivers/misc/aspeed/snoop_aspeed.c b/drivers/misc/aspeed/snoop_aspeed.c
index 0f8fd912f4..dca5a39605 100644
--- a/drivers/misc/aspeed/snoop_aspeed.c
+++ b/drivers/misc/aspeed/snoop_aspeed.c
@@ -38,20 +38,12 @@ LOG_MODULE_REGISTER(snoop_aspeed, CONFIG_LOG_DEFAULT_LEVEL);
 #define	  HICRB_ENSNP1D		BIT(15)
 #define	  HICRB_ENSNP0D		BIT(14)
 
-/* misc. constant */
-#define SNOOP_CHANNEL_NUM	2
-
 static uintptr_t lpc_base;
 #define LPC_RD(reg)             sys_read32(lpc_base + reg)
 #define LPC_WR(val, reg)        sys_write32(val, lpc_base + reg)
 
-struct snoop_aspeed_fifo {
-	intptr_t reserved;
-	uint32_t byte;
-};
-
 struct snoop_aspeed_data {
-	struct k_fifo fifo[SNOOP_CHANNEL_NUM];
+	snoop_aspeed_rx_callback_t *rx_cb;
 };
 
 struct snoop_aspeed_config {
@@ -59,21 +51,16 @@ struct snoop_aspeed_config {
 	uint16_t port[SNOOP_CHANNEL_NUM];
 };
 
-int snoop_aspeed_read(const struct device *dev, uint32_t ch, uint8_t *out, bool blocking)
+int snoop_aspeed_register_rx_callback(const struct device *dev, snoop_aspeed_rx_callback_t cb)
 {
-	struct snoop_aspeed_fifo *node;
 	struct snoop_aspeed_data *data = (struct snoop_aspeed_data *)dev->data;
 
-	if (ch >= SNOOP_CHANNEL_NUM)
-		return -EINVAL;
-
-	node = k_fifo_get(&data->fifo[ch], (blocking) ? K_FOREVER : K_NO_WAIT);
-	if (!node)
-		return -ENODATA;
-
-	*out = (uint8_t)node->byte;
+	if (data->rx_cb) {
+		LOG_ERR("Snoop RX callback is registered\n");
+		return -EBUSY;
+	}
 
-	k_free(node);
+	data->rx_cb = cb;
 
 	return 0;
 }
@@ -81,28 +68,27 @@ int snoop_aspeed_read(const struct device *dev, uint32_t ch, uint8_t *out, bool
 static void snoop_aspeed_isr(const struct device *dev)
 {
 	uint32_t hicr6, snpwdr;
-	struct snoop_aspeed_fifo *node;
+	uint8_t snoop[SNOOP_CHANNEL_NUM];
+	uint8_t *snoop_ptr[SNOOP_CHANNEL_NUM];
 	struct snoop_aspeed_data *data = (struct snoop_aspeed_data *)dev->data;
 
 	hicr6 = LPC_RD(HICR6);
 	snpwdr = LPC_RD(SNPWDR);
 
+	memset(snoop_ptr, 0, sizeof(snoop_ptr));
+
 	if (hicr6 & HICR6_STR_SNP0W) {
-		node = k_malloc(sizeof(struct snoop_aspeed_fifo));
-		if (node) {
-			node->byte = (snpwdr & SNPWDR_DATA0_MASK) >> SNPWDR_DATA0_SHIFT;
-			k_fifo_put(&data->fifo[0], node);
-		} else
-			LOG_ERR("failed to allocate FIFO0, drop data\n");
+		snoop[0] = (snpwdr & SNPWDR_DATA0_MASK) >> SNPWDR_DATA0_SHIFT;
+		snoop_ptr[0] = &snoop[0];
 	}
 
 	if (hicr6 & HICR6_STR_SNP1W) {
-		node = k_malloc(sizeof(struct snoop_aspeed_fifo));
-		if (node) {
-			node->byte = (snpwdr & SNPWDR_DATA1_MASK) >> SNPWDR_DATA1_SHIFT;
-			k_fifo_put(&data->fifo[1], node);
-		} else
-			LOG_ERR("failed to allocate FIFO1, drop data\n");
+		snoop[1] = (snpwdr & SNPWDR_DATA1_MASK) >> SNPWDR_DATA1_SHIFT;
+		snoop_ptr[1] = &snoop[1];
+	}
+
+	if (data->rx_cb) {
+		data->rx_cb(snoop_ptr[0], snoop_ptr[1]);
 	}
 
 	LPC_WR(hicr6, HICR6);
@@ -143,7 +129,6 @@ static void snoop_aspeed_enable(const struct device *dev, uint32_t ch)
 static int snoop_aspeed_init(const struct device *dev)
 {
 	int i;
-	struct snoop_aspeed_data *data = (struct snoop_aspeed_data *)dev->data;
 	struct snoop_aspeed_config *cfg = (struct snoop_aspeed_config *)dev->config;
 
 	if (!lpc_base)
@@ -160,7 +145,6 @@ static int snoop_aspeed_init(const struct device *dev)
 		if (!cfg->port[i])
 			continue;
 
-		k_fifo_init(&data->fifo[i]);
 		snoop_aspeed_enable(dev, i);
 	}
 
diff --git a/include/drivers/misc/aspeed/snoop_aspeed.h b/include/drivers/misc/aspeed/snoop_aspeed.h
index 6fd31444b9..f97daf68f5 100644
--- a/include/drivers/misc/aspeed/snoop_aspeed.h
+++ b/include/drivers/misc/aspeed/snoop_aspeed.h
@@ -8,6 +8,13 @@
 
 #define SNOOP_CHANNEL_NUM	2
 
-int snoop_aspeed_read(const struct device *dev, uint32_t ch, uint8_t *out, bool blocking);
+/*
+ * callback to handle snoop RX data
+ * @snoop0: pointer to the byte snooped by channel 0, NULL if no data
+ * @snoop1: pointer to the byte snooped by channel 1, NULL if no data
+ */
+typedef void snoop_aspeed_rx_callback_t(const uint8_t *snoop0, const uint8_t *snoop1);
+
+int snoop_aspeed_register_rx_callback(const struct device *dev, snoop_aspeed_rx_callback_t cb);
 
 #endif
-- 
2.25.1

