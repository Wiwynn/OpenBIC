From f1d09c70c5b4dbd36286e0d567d8265369c7fdb9 Mon Sep 17 00:00:00 2001
From: Dylan Hung <dylan_hung@aspeedtech.com>
Date: Wed, 30 Nov 2022 16:49:26 +0800
Subject: [PATCH 26/30] i3c: aspeed: make slave_put_read_data be a blocking
 function

In slave mode, the pending read data was put to the TX FIFO then
returned directly. The application needed to call another API to know if
the data is consumed.  This commit makes the slave_put_read_data wait
for the data consumed so that the application needn't to know the data
status after it calls this function.

Signed-off-by: Dylan Hung <dylan_hung@aspeedtech.com>
Change-Id: I39be9d4612caa463126534b91f08fdf68b790beb
---
 drivers/i3c/i3c_aspeed.c  | 26 ++++++++++++++------------
 include/drivers/i3c/i3c.h | 19 ++++++-------------
 2 files changed, 20 insertions(+), 25 deletions(-)

diff --git a/drivers/i3c/i3c_aspeed.c b/drivers/i3c/i3c_aspeed.c
index 2676443032..c1bd5cfef5 100644
--- a/drivers/i3c/i3c_aspeed.c
+++ b/drivers/i3c/i3c_aspeed.c
@@ -1374,6 +1374,18 @@ int i3c_aspeed_slave_register(const struct device *dev, struct i3c_slave_setup *
 	return 0;
 }
 
+static int i3c_aspeed_slave_wait_data_consume(const struct device *dev)
+{
+	struct i3c_aspeed_obj *obj = DEV_DATA(dev);
+	union i3c_intr_s events;
+
+	events.value = 0;
+	events.fields.resp_q_ready = 1;
+	osEventFlagsWait(obj->event_id, events.value, osFlagsWaitAny, osWaitForever);
+
+	return 0;
+}
+
 int i3c_aspeed_slave_put_read_data(const struct device *dev, struct i3c_slave_payload *data,
 				   struct i3c_ibi_payload *ibi_notify)
 {
@@ -1433,6 +1445,8 @@ int i3c_aspeed_slave_put_read_data(const struct device *dev, struct i3c_slave_pa
 		}
 	}
 
+	i3c_aspeed_slave_wait_data_consume(dev);
+
 	return 0;
 }
 
@@ -1481,18 +1495,6 @@ int i3c_aspeed_slave_send_sir(const struct device *dev, struct i3c_ibi_payload *
 	return 0;
 }
 
-int i3c_aspeed_slave_wait_data_consume(const struct device *dev)
-{
-	struct i3c_aspeed_obj *obj = DEV_DATA(dev);
-	union i3c_intr_s events;
-
-	events.value = 0;
-	events.fields.resp_q_ready = 1;
-	osEventFlagsWait(obj->event_id, events.value, osFlagsWaitAny, osWaitForever);
-
-	return 0;
-}
-
 int i3c_aspeed_slave_set_static_addr(const struct device *dev, uint8_t static_addr)
 {
 	struct i3c_aspeed_config *config = DEV_CFG(dev);
diff --git a/include/drivers/i3c/i3c.h b/include/drivers/i3c/i3c.h
index 094492d5c3..69e25add28 100644
--- a/include/drivers/i3c/i3c.h
+++ b/include/drivers/i3c/i3c.h
@@ -209,22 +209,16 @@ int i3c_aspeed_slave_send_sir(const struct device *dev, struct i3c_ibi_payload *
  * @param ibi_notify pointer to the IBI notification structure (optional)
  * @return int 0 = success
  *
- * This function puts the pending read data to the TX FIFO.  If @ibi_notify is
- * specified, a slave interrupt with the IBI payload will be issued to notify
- * the master device that there is a pending read data.  The master device shall
- * issue a private read transfer to read the data back.
+ * This function puts the pending read data to the TX FIFO and waits until the
+ * pending read data is consumed.  The API uses osEventFlagsWait and will make
+ * the caller thread sleep so do not call it in the ISR.
+ * If @ibi_notify is specified, a slave interrupt with the IBI payload will be
+ * issued to notify the master device that there is a pending read data.  The
+ * master device shall issue a private read transfer to read the data back.
  */
 int i3c_aspeed_slave_put_read_data(const struct device *dev, struct i3c_slave_payload *data,
 				   struct i3c_ibi_payload *ibi_notify);
 
-/**
- * @brief slave device waits for the private read data be consumed
- *
- * @param dev the slave device
- * @return int 0 = success
- */
-int i3c_aspeed_slave_wait_data_consume(const struct device *dev);
-
 /**
  * @brief set the pid extra info of the i3c controller
  * @param dev the I3C controller
@@ -254,7 +248,6 @@ int i3c_master_send_getbcr(const struct device *master, uint8_t addr, uint8_t *b
 #define i3c_slave_set_static_addr	i3c_aspeed_slave_set_static_addr
 #define i3c_slave_send_sir		i3c_aspeed_slave_send_sir
 #define i3c_slave_put_read_data		i3c_aspeed_slave_put_read_data
-#define i3c_slave_wait_data_consume	i3c_aspeed_slave_wait_data_consume
 #define i3c_slave_get_dynamic_addr	i3c_aspeed_slave_get_dynamic_addr
 #define i3c_slave_get_event_enabling	i3c_aspeed_slave_get_event_enabling
 #define i3c_set_pid_extra_info		i3c_aspeed_set_pid_extra_info
-- 
2.24.1

