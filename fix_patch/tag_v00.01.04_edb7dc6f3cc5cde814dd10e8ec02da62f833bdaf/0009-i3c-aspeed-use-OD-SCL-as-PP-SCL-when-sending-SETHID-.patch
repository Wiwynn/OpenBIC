From 73c6ee18ba2a6d739be68e982cbc86ff8a7a366c Mon Sep 17 00:00:00 2001
From: Dylan Hung <dylan_hung@aspeedtech.com>
Date: Fri, 15 Jul 2022 17:23:50 +0800
Subject: [PATCH 09/11] i3c: aspeed: use OD SCL as PP SCL when sending SETHID
 CCC

According to section 3.5.2.7 in JESD403 spec. v1.1:

"The host shall send this CCC at a speed not exceeding 1MHz to ensure
error probability is minimized."

So we use OD timing for PP timing when sending SETHID, then pop the
setting when existing send_ccc function.

Signed-off-by: Dylan Hung <dylan_hung@aspeedtech.com>
Change-Id: Ica21575fbfb00ede24fdad412dadab47ebb79c32
---
 drivers/i3c/i3c_aspeed.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/drivers/i3c/i3c_aspeed.c b/drivers/i3c/i3c_aspeed.c
index 0369392c52..b7ad00f4df 100644
--- a/drivers/i3c/i3c_aspeed.c
+++ b/drivers/i3c/i3c_aspeed.c
@@ -1321,9 +1321,13 @@ int i3c_aspeed_slave_prep_read_data(const struct device *dev, uint8_t *data, int
 int i3c_aspeed_master_send_ccc(const struct device *dev, struct i3c_ccc_cmd *ccc)
 {
 	struct i3c_aspeed_obj *obj = DEV_DATA(dev);
+	struct i3c_aspeed_config *config = DEV_CFG(dev);
+	struct i3c_register_s *i3c_register = config->base;
 	struct i3c_aspeed_xfer xfer;
 	struct i3c_aspeed_cmd cmd;
 	union i3c_device_cmd_queue_port_s cmd_hi, cmd_lo;
+	uint32_t pp_timing = i3c_register->pp_timing.value;
+	uint32_t od_timing = i3c_register->od_timing.value;
 	int pos = 0;
 	int ret;
 
@@ -1334,6 +1338,10 @@ int i3c_aspeed_master_send_ccc(const struct device *dev, struct i3c_ccc_cmd *ccc
 		}
 	}
 
+	if (ccc->id == I3C_CCC_SETHID) {
+		i3c_register->pp_timing.value = od_timing;
+	}
+
 	xfer.ncmds = 1;
 	xfer.cmds = &cmd;
 	xfer.ret = 0;
@@ -1373,6 +1381,10 @@ int i3c_aspeed_master_send_ccc(const struct device *dev, struct i3c_ccc_cmd *ccc
 
 	ret = xfer.ret;
 
+	if (ccc->id == I3C_CCC_SETHID) {
+		i3c_register->pp_timing.value = pp_timing;
+	}
+
 	return ret;
 }
 
-- 
2.25.1

